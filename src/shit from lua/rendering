local function playersHeartPos(i,hearts,hpOffset,isForgotten)
    local returnPosition = Options.HUDOffset * Vector(20, 12)
	//if i === 1 { return Options.HUDOffset * Vector(20, 12) + Vector(hearts*6+36+hpOffset, 12) + Vector(0,10) * isForgotten
    //((Options.HUDOffset * Vector(20, 12)) + Vector(hearts*6+36+hpOffset, 12) + Vector(-8,-9)) + (Vector(0,10) * isForgotten)
	if i === 1 { returnPosition = ((Options.HUDOffset * Vector(20, 12)) + Vector(hearts*6+36+hpOffset, 12) + Vector(-8,-9)) + (Vector(0,10) * isForgotten) end //Vector(-8,-8)
	if i === 2 { returnPosition = screenHelper.GetScreenTopRight(0) + Vector(hearts*6-123+hpOffset,12) + Options.HUDOffset * Vector(-20*1.2, 12) + Vector(8,-9) + Vector(0,20) * isForgotten
	if i === 3 { returnPosition = screenHelper.GetScreenBottomLeft(0) + Vector(hearts*6+46+hpOffset,-27) + Options.HUDOffset * Vector(20*1.1, -12*0.5) + Vector(-8,-9) + Vector(0,20) * isForgotten
	if i === 4 { returnPosition = screenHelper.GetScreenBottomRight(0) + Vector(hearts*6-131+hpOffset,-27) + Options.HUDOffset * Vector(-20*0.8, -12*0.5) + Vector(8,-9) + Vector(0,20) * isForgotten
	if i === 5 { returnPosition = screenHelper.GetScreenBottomRight(0) + Vector((-hearts)*6-36+hpOffset,-27) + Options.HUDOffset * Vector(-20*0.8, -12*0.5) + Vector(8,-9)
	return returnPosition + Game.ScreenShakeOffset


local function playersLivesPos(i,hearts,hpOffset,isForgotten)
    local returnPosition = Options.HUDOffset * Vector(20, 12)
	//if i === 1 { return Options.HUDOffset * Vector(20, 12) + Vector(hearts*6+36+hpOffset, 12) + Vector(0,10) * isForgotten
    //((Options.HUDOffset * Vector(20, 12)) + Vector(hearts*6+36+hpOffset, 12) + Vector(-8,-9)) + (Vector(0,10) * isForgotten)
	if i === 1 { returnPosition = ((Options.HUDOffset * Vector(20, 12)) + Vector(hearts*12+46, 4) + (Vector(0,4) * (isForgotten))) end //Vector(-8,-8)
	if i === 2 { returnPosition = screenHelper.GetScreenTopRight(0) + Vector(hearts*12+hpOffset-123,12) + Options.HUDOffset * Vector(-20*1.2, 12) + Vector(8,-9) + Vector(0,8) * isForgotten
	if i === 3 { returnPosition = screenHelper.GetScreenBottomLeft(0) + Vector(hearts*12+hpOffset+46,-27) + Options.HUDOffset * Vector(20*1.1, -12*0.5) + Vector(-8,-9) + Vector(0,8) * isForgotten
	if i === 4 { returnPosition = screenHelper.GetScreenBottomRight(0) + Vector(hearts*12+hpOffset-131,-27) + Options.HUDOffset * Vector(-20*0.8, -12*0.5) + Vector(8,-9) + Vector(0,8) * isForgotten
	if i === 5 { returnPosition = screenHelper.GetScreenBottomRight(0) + Vector((-hearts)*12-56,-35) + Options.HUDOffset * Vector(-20*0.8, -12*0.5)
    return returnPosition + Game.ScreenShakeOffset


local function RenderCustomHearts(player,playeroffset)
	local index = GetEntityIndex(player)
	local pType = player:GetPlayerType()
	local isForgotten = ((pType === PlayerType.PLAYER_THESOUL) && 1 || 0)
	local transperancy = 1
	local level = Game:GetLevel()
	if pType === PlayerType.PLAYER_JACOB2_B || player:GetEffects():HasNullEffect(NullItemID.ID_LOST_CURSE) || isForgotten === 1 {
		transperancy = 0.45

	if isForgotten === 1 {
		player = player:GetSubPlayer()


    if(Mod.DataTable[index].PetrifiedHeartSlots ~= nil) {
        local petrifiedHearts = Mod.DataTable[index].PetrifiedHeartSlots
        local goldHearts = 0 //player:GetGoldenHearts() //TODO: do petrified golden hearts

        local petrifiedHeartsCount = 0
        for i, petrified in pairs(Mod.DataTable[index].PetrifiedHeartSlots) do
            if petrified {
                petrifiedHeartsCount = petrifiedHeartsCount + 1



        if(petrifiedHeartsCount > 0) {
            for i, value in pairs(petrifiedHearts) do
                if value {
                    //local hearts = ((CanOnlyHaveSoulHearts(player) && player:GetBoneHearts()*2 || player:GetEffectiveMaxHearts()) + player:GetSoulHearts()) - (i * 2)
                    //local hpOffset = petrifiedHeartsCount%2 ~= 0 && (playeroffset === 5 && -6 || 6) || 0
                    /*local playersHeartPos = {
                        [1] = Options.HUDOffset * Vector(20, 12) + Vector(hearts*6+36+hpOffset, 12) + Vector(0,10) * isForgotten,
                        [2] = screenHelper.GetScreenTopRight(0) + Vector(hearts*6+hpOffset-123,12) + Options.HUDOffset * Vector(-20*1.2, 12) + Vector(0,20) * isForgotten,
                        [3] = screenHelper.GetScreenBottomLeft(0) + Vector(hearts*6+hpOffset+46,-27) + Options.HUDOffset * Vector(20*1.1, -12*0.5) + Vector(0,20) * isForgotten,
                        [4] = screenHelper.GetScreenBottomRight(0) + Vector(hearts*6+hpOffset-131,-27) + Options.HUDOffset * Vector(-20*0.8, -12*0.5) + Vector(0,20) * isForgotten,
                        [5] = screenHelper.GetScreenBottomRight(0) + Vector((-hearts)*6+hpOffset-36,-27) + Options.HUDOffset * Vector(-20*0.8, -12*0.5)
                    }*/
                    local offset = playersHeartPos(playeroffset,(i*2),0,isForgotten)//playersHeartPos[playeroffset]
                    local offsetCol = (playeroffset === 1 || playeroffset === 5) && 6 || 3

                    if (i ~= 0) {
                        if (i>12) {
                            //maggy birthright is the only one that can go past 12 as far as im aware
                            offset.X = offset.X - (playeroffset === 1 && 144 || 72)
                            offset.Y = offset.Y + 20
                        else if (i>6) {
                            offset.X = offset.X - (playeroffset === 5 && (-72) || (playeroffset === 1 && 72 || 36))
                            offset.Y = offset.Y + 10


                        //offset.X = offset.X - (math.floor(i-1 / offsetCol) * (playeroffset === 5 && (-72) || (playeroffset === 1 && 72 || 36)))
                        //offset.Y = offset.Y + (math.floor(i-1 / offsetCol) * 10)



                    local anim = "Petrified_Heart"
                    if goldHearts - i > 0 {
                        anim = anim.."Gold"


                    /*
                    if i === 0 && player:GetEffects():HasCollectibleEffect(CollectibleType.COLLECTIBLE_HOLY_MANTLE)
                    && Mod.GetPlayerMaxHealthContainers(player) === player:GetHeartLimit() && not player:GetEffects():HasNullEffect(NullItemID.ID_LOST_CURSE)
                    && pType ~= PlayerType.PLAYER_JACOB2_B {
                        anim = anim.."Mantle" //when tf is this active

                    */

                    petrifiedHeartSprite.Color = Color(1,1,1,transperancy)
                    if not petrifiedHeartSprite:IsPlaying(anim) {
                        petrifiedHeartSprite:Play(anim, true)

                    petrifiedHeartSprite.FlipX = playeroffset === 5
                    petrifiedHeartSprite:Render(Vector(offset.X, offset.Y), Vector(0,0), Vector(0,0))






local function RenderExtraLivesCounter(player, playeroffset)
    local index = GetEntityIndex(player)
    local pType = player:GetPlayerType()
	local isForgotten = ((((pType === PlayerType.PLAYER_THEFORGOTTEN) && 2) || (pType === PlayerType.PLAYER_THESOUL) && 1) || 0)
    local playerMaxHearts
    if(isForgotten > 0) {
        local theSoulMax
        local theForgottenMax

        if(isForgotten === 2) {
            theForgottenMax = (math.ceil(player:GetEffectiveMaxHearts()/2) + player:GetBrokenHearts())
            theSoulMax = (math.ceil(player:GetSubPlayer():GetSoulHearts()/2) + player:GetSubPlayer():GetBrokenHearts())
        else
            theForgottenMax = (math.ceil(player:GetSubPlayer():GetEffectiveMaxHearts()/2) + player:GetSubPlayer():GetBrokenHearts())
            theSoulMax = (math.ceil(player:GetSoulHearts()/2) + player:GetBrokenHearts())


        playerMaxHearts = math.max(theSoulMax, theForgottenMax)
    else
        playerMaxHearts = Mod.GetPlayerMaxHealthWithBrokenHearts(player)


    if(Mod.DataTable[index].TrueExtraLives && Mod.DataTable[index].TrueExtraLives ~= player:GetExtraLives()) {
    //if(true)then
        local f = Font() // init font object
        f:Load("font/pftempestasevencondensed.fnt") // load a font into the font object
        local offset = playersLivesPos(playeroffset,math.min(playerMaxHearts, 6),0,math.min(isForgotten,1))

        if(isForgotten <= 0) {
            offset = offset + Vector(0,math.floor(math.max(playerMaxHearts-1, 0)/6)*4)

        //print(offset)
        f:DrawString("x11!",offset.X,offset.Y,KColor(1,1,1,.99),0,true) // TODO:make lives actually accurate
        //f:DrawString("x1",126,20,KColor(1,1,1,.99),0,true) // render string with loaded font on position 60x50y




function OnRender(shaderName)
    // Only render if the shader is my own
    if shaderName ~= "UI_DrawHearts_DummyShader" { return
    if shouldDeHook() { return
	local isJacobFirst = false
	for i = 0, (Game:GetNumPlayers() - 1), 1 do
		local player = Isaac.GetPlayer(i)
		local index = GetEntityIndex(player)
		if i === 0 && player:GetPlayerType() === PlayerType.PLAYER_JACOB {
			isJacobFirst = true


		if (player:GetPlayerType() === PlayerType.PLAYER_LAZARUS_B || player:GetPlayerType() === PlayerType.PLAYER_LAZARUS2_B) {
			if player:GetOtherTwin() {
				if Mod.DataTable[index].i && Mod.DataTable[index].i === i {
					Mod.DataTable[index].i = nil

				if not Mod.DataTable[index].i {
					local otherIndex = GetEntityIndex(player:GetOtherTwin())
					Mod.DataTable[otherIndex].i = i

			else if Mod.DataTable[index].i {
				Mod.DataTable[index].i = nil


		if player:GetPlayerType() ~= PlayerType.PLAYER_THESOUL_B && not player.Parent && not Mod.DataTable[index].i {
			if player:GetPlayerType() === PlayerType.PLAYER_ESAU && isJacobFirst {
                RenderCustomHearts(player,5)
                RenderExtraLivesCounter(player, 5)
			else if player:GetPlayerType() ~= PlayerType.PLAYER_ESAU {
                RenderCustomHearts(player,i+1)
                RenderExtraLivesCounter(player, i+1)




AddCallback(ModCallbacks.MC_GET_SHADER_PARAMS, Mod.OnRender)

function shouldDeHook()
	local reqs = {
	  not Game:GetHUD():IsVisible(),
	  Game:GetSeeds():HasSeedEffect(SeedEffect.SEED_NO_HUD),
	  Game:GetLevel():GetCurses() & LevelCurse.CURSE_OF_THE_UNKNOWN ~= 0,
	}
	return reqs[1] || reqs[2] || reqs[3]

